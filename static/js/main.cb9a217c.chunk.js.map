{"version":3,"sources":["components/login/login.module.css","components/login/login.jsx","components/home/home.jsx","components/blank.jsx","App.jsx","index.js"],"names":["module","exports","Login","props","history","useHistory","firebase","auth","onAuthStateChanged","user","push","console","log","className","Styles","container","logo","logins","googleLoginBtn","onClick","signInWithGoogle","google","githubLoginBtn","singInWithGithub","github","Home","signOut","Blank","displayName","App","path","exact","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","setCustomParameters","prompt","signInWithPopup","currentUser","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,eAAiB,8BAA8B,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,wB,kYCgDvQC,EAxCD,SAACC,GACb,IAAMC,EAAUC,cAgBd,OAbFC,IAASC,OAAOC,oBAAmB,SAASC,GACtCA,GACFL,EAAQM,KAAK,SACbC,QAAQC,IAAI,kIAEZD,QAAQC,IAAI,+DASV,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOE,KAAtB,wBACF,sBAAKH,UAAWC,IAAOG,OAAvB,UACE,yBACAJ,UAAWC,IAAOI,eAClBC,QAASC,EAFT,UAGA,mBAAGP,UAAS,wBAAmBC,IAAOO,UAHtC,yBAKE,yBACFR,UAAWC,IAAOQ,eAClBH,QAASI,EAFP,UAGF,mBAAGV,UAAS,wBAAmBC,IAAOU,UAHpC,gCCPGC,G,MAnBF,SAACtB,GAEV,IAAMC,EAAUC,cAQZ,OANJC,IAASC,OAAOC,oBAAmB,SAASC,GACnCA,GACDL,EAAQM,KAAK,aAKb,qCACA,gDAAmBP,EAAMM,QACzB,wBAAQU,QAAS,WACbZ,EAAKmB,WADT,yBCEGC,EAjBD,SAACxB,GACX,IAAMC,EAAUC,cAWZ,OATPC,IAASC,OAAOC,oBAAmB,SAASC,GACrCA,GACAL,EAAQM,KAAK,SACfC,QAAQC,IAAR,UAAeH,EAAKmB,YAApB,kJAEAxB,EAAQM,KAAK,aAKP,6CCaGmB,MA1Bf,SAAa1B,GAEX,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,KAAM,SAASC,OAAK,EAA3B,SACE,cAAC,EAAD,CACEtB,KAAON,EAAMM,SAGjB,cAAC,IAAD,CAAOqB,KAAM,IAAIC,OAAK,EAAtB,SACE,cAAC,EAAD,CACEtB,KAAON,EAAMM,SAGjB,cAAC,IAAD,CAAOqB,KAAM,QAAQC,OAAK,EAA1B,SACE,cAAC,EAAD,CACEtB,KAAON,EAAMM,e,MCJzBH,IAAS0B,cAVc,CACrBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,IAAMhC,EAAOD,IAASC,OAChBiC,EAAYlC,IAASkC,YAE5BC,EAAiB,IAAInC,IAASC,KAAKmC,mBACnCC,EAAiB,IAAIrC,IAASC,KAAKqC,mBAEzCH,EAAeI,oBAAoB,CAACC,OAAQ,mBAC5CH,EAAeE,oBAAoB,CAACC,OAAQ,mBAErC,IAAM1B,EAAmB,kBAAMb,EAAKwC,gBAAgBN,IAC9ClB,EAAmB,kBAAMhB,EAAKwC,gBAAgBJ,IAiBrDlC,GAdSH,YAAf,EAcaA,IAASC,OAAOyC,aAE7BC,IAASC,OACL,cAAC,EAAD,CACAzC,KAAQA,EACRW,iBAAkBA,EAClBG,iBAAkBA,EAClBhB,KAAOA,IAET4C,SAASC,eAAe,W","file":"static/js/main.cb9a217c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__1RpsD\",\"logo\":\"login_logo__2AErc\",\"logins\":\"login_logins__hhRPF\",\"googleLoginBtn\":\"login_googleLoginBtn__BPjY1\",\"githubLoginBtn\":\"login_githubLoginBtn__19hno\",\"google\":\"login_google__2L6Lr\",\"github\":\"login_github__27DMf\",\"logout\":\"login_logout__8vgF-\"};","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { auth, signInWithGoogle, singInWithGithub } from '../..';\r\nimport Styles from './login.module.css'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory();\r\n\r\n\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if (user) {\r\n      history.push('/home')\r\n      console.log('로그인된 상태입니다. 메인페이지로 이동합니다.')\r\n    } else {\r\n      console.log('로그인이 필요합니다.')\r\n    }\r\n  })\r\n\r\n  // 로그인 완료시, 다른 페이지로 이동!!! 기능 삽입해야합니다.\r\n\r\n\r\n\r\n    return(\r\n        <div className={Styles.container}>\r\n          <h1 className={Styles.logo}>CARD MAKER</h1>\r\n        <div className={Styles.logins}>\r\n          <button\r\n          className={Styles.googleLoginBtn} \r\n          onClick={signInWithGoogle}>\r\n          <i className={`fab fa-google ${Styles.google}`  }></i> \r\n            Sign in with Google</button>\r\n            <button\r\n          className={Styles.githubLoginBtn} \r\n          onClick={singInWithGithub}>\r\n          <i className={`fab fa-github ${Styles.github}`  }></i> \r\n            Sign in with Github</button>\r\n        </div>\r\n        {/* <div className={Styles.logout}>\r\n          <button onClick={() => {\r\n            auth.signOut()}}>logOut</button>\r\n          </div> */}\r\n        </div>\r\n      )\r\n        };\r\n\r\nexport default Login;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Styles from './home.module.css'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport { auth } from '../..';\r\n\r\nconst Home = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n        if (!user) {\r\n            history.push('/login')\r\n        }\r\n      })\r\n\r\n        return(\r\n            <>\r\n            <h1>this is home, {props.user}</h1>\r\n            <button onClick={() => {\r\n                auth.signOut()}}>logOut</button>\r\n            </>\r\n        )\r\n    };\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst Blank = (props) => {\r\n    const history = useHistory();\r\n\r\n firebase.auth().onAuthStateChanged(function(user) {\r\n    if (user) {\r\n        history.push('/home')\r\n      console.log(`${user.displayName} / 이미 로그인 되어있습니다. 메인페이지로 이동합니다`)\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  })\r\n\r\n        return(\r\n            <h1>Loading...</h1>\r\n        )\r\n    };\r\n\r\nexport default Blank;","import { auth, signInWithGoogle, singInWithGithub } from '.';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom'\nimport Login from './components/login/login.jsx';\nimport Home from './components/home/home.jsx';\nimport Blank from './components/blank';\n\nfunction App(props){\n\n  return (\n    <Router>\n      <Switch>\n        <Route path= '/login' exact>\n          <Login \n            user= {props.user}\n          />\n        </Route> \n        <Route path= '/' exact>\n          <Blank \n            user= {props.user}\n          />\n        </Route>\n        <Route path= '/home' exact>\n          <Home\n            user ={props.user}\n          />\n        </Route>\n      </Switch>\n    </Router>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA7C-6c6so8SOFdSX3zXcKSNPUHJDllAKc\",\n  authDomain: \"my-first-firebase-fe805.firebaseapp.com\",\n  projectId: \"my-first-firebase-fe805\",\n  storageBucket: \"my-first-firebase-fe805.appspot.com\",\n  messagingSenderId: \"840856013107\",\n  appId: \"1:840856013107:web:106549e2872468e9ea1646\",\n  measurementId: \"G-JRKNFLCKMQ\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst githubProvider = new firebase.auth.GithubAuthProvider();\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\ngithubProvider.setCustomParameters({prompt: 'select_account'});\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const singInWithGithub = () => auth.signInWithPopup(githubProvider);\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\nexport default firebase;\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.\n\n// -------------------- database 실험 ------- \n// const userId = '누구삼'\n// const myData = firebase.database().ref('/사람'+ userId);\n\n// myData.push(\n//   {hey: 'why?'}\n// )\n// myData.on('value', snapshot => {\n//   console.log(snapshot.val())\n// })\n\nconst user = firebase.auth().currentUser\n\nReactDOM.render(\n    <App\n    user = {user} \n    signInWithGoogle={signInWithGoogle}\n    singInWithGithub={singInWithGithub}\n    auth ={auth}/>\n    ,\n  document.getElementById('root')\n);"],"sourceRoot":""}